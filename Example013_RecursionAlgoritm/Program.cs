// string[,] table = new string[2,5]; // задали массив строк
// table[1,2] = "слово";

// for (int rows = 0; rows < 2; rows++)
// {
//     for (int columns = 0; columns < 5; columns++)
//     {
//         System.Console.Write($"-{table[rows,columns]}- "); // при помощи "--" обрамляем пустые элементы
//     }
//     System.Console.WriteLine();
// }



// void PrintArray(int[,] matr) // описываем метод для распечатки двумерных массивов
// {
//     for (int i = 0; i < matr.GetLength(0); i++) //matrix.GetLength(0) - количество строк/ длина массива по строкам
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) //matrix.GetLength(1) - количество столбцов/ длина массива по столбцам
//         {
//             System.Console.Write($"{matr[i, i]} ");
//         }
//         System.Console.WriteLine();
//     }
// }

// void FillArray(int[,] matr) // описываем метод для распечатки двумерных массивов
// {
//     for (int i = 0; i < matr.GetLength(0); i++) //matrix.GetLength(0) - количество строк/ длина массива по строкам
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) //matrix.GetLength(1) - количество столбцов/ длина массива по столбцам
//         {
//             matr[i,j]= new Random().Next(1,10);
//         }
//         System.Console.WriteLine();
//     }
// }

// int[,] matrix = new int[3,4]; //инициализируем массив чисел с 0 элементами
// PrintArray(matrix);
// FillArray(matrix);

// Console.WriteLine();
// PrintArray(matrix); // заполняем массив элементами и распечатываем


// int[,] pic = new int[,]
// {
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
//  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
//  {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
//  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// };

// void PrintImage(int[,] image) // описываем метод для распечатки изображения
// {
//     for (int i = 0; i < image.GetLength(0); i++) //matrix.GetLength(0) - количество строк/ длина массива по строкам
//     {
//         for (int j = 0; j < image.GetLength(1); j++) //matrix.GetLength(1) - количество столбцов/ длина массива по столбцам
//         {
//             if (image[i,j]==0) Console.Write($" ");
//             else Console.Write($"+");
//         }
//         System.Console.WriteLine();
//     }
// }


// void FillImage(int row, int col) //метод, который закрашивает изображение внутри контура
// {
//     if (pic[row,col]==0)
//     {
//         pic[row,col]=1;
//         FillImage(row-1,col);
//         FillImage(row,col-1);
//         FillImage(row+1,col);
//         FillImage(row,col+1);
//     }
// }
// PrintImage(pic);
// FillImage(13,13);
// PrintImage(pic);


// функция для подсчета факториала числа n
// double Factorial(int n) 
// {
//     if (n==1) return 1;
//     else return n*Factorial(n-1);
// }
//  for (int i = 1; i < 40; i++)
//  {
//     System.Console.WriteLine($"{i}!={Factorial(i)}");
//  }



//функция для вывода чисел Фибоначчи
int Fibonacci(int n) 
{
    if (n==1 || n==2) return 1;
    else return Fibonacci(n-1) + Fibonacci(n-2);
}
 for (int i = 1; i < 10; i++)
 {
    System.Console.WriteLine($"f({i}) = {Fibonacci(i)};");
 }

